
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Data.Objects;
using System.Data.EntityClient;
using System.Collections.Generic;//custom-code
using Eisk.BusinessEntities;//custom-code

namespace Eisk.DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseContext object using the connection string found in the 'DatabaseContext' section of the application configuration file.
        /// </summary>
        public DatabaseContext() : base("name=DatabaseContext", "DatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseContext object.
        /// </summary>
        public DatabaseContext(string connectionString) : base(connectionString, "DatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseContext object.
        /// </summary>
        public DatabaseContext(EntityConnection connection) : base(connection, "DatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<Employee> Employees//custom-code for testability
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }

        #endregion
    }
    

    #endregion
    }//custom-code
    
